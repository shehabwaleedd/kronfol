{"version":3,"file":"static/js/93.06490e4d.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["animationControls","hasMounted","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","invariant","animations","forEach","push","animateVisualElement","Promise","all","set","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","length","x1","y1","x2","y2","undefined","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","mixImmediate","origin","target","getMixer","startsWith","mixComplex","mixArray","output","numValues","blendValue","fromThis","mixObject","key","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","warning","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","frame","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","createAcceleratedAnimation","valueName","has","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","isTargetAnimatable","defaultOrigin","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","getProps","acceleratedAnimation","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionEnd","makeTargetAnimatable","willChange","getValue","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","isWillChangeMotionValue","remove","setTarget","animateVariant","variant","resolved","resolveVariant","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","resolvedDefinition","camelToDash","isKeyframesTarget","_delay","acos","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","name","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","setStaticValue","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","clear","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","match","exec","parseCSSVariable","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","item","index","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","frameDuration","collectMotionValues","MotionValue","init","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","tokenised","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}